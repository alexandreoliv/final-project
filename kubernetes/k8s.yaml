---
apiVersion: v1
kind: Namespace
metadata:
  name: project3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: project3
data:
  PORT: "8706"
  DATABASE_URI: "mongodb://root:example@mongo-service.project3.svc.cluster.local:27017"
  REDIS_HOST: "redis-service.project3.svc.cluster.local"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: project3
type: Opaque
data:
  REDIS_PASSWORD: c29tZXJlZGlzcGFzc3dvcmQ= # Base64 encoded "someredispassword"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: project3
data:
  NEXT_PUBLIC_API_URL: "http://k8s-project3-ingress-c8229e39ca-278482245.us-west-2.elb.amazonaws.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: project3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: alexandrebo/frontend:1.0
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: frontend-config
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: project3
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: alexandrebo/backend:1.0
        ports:
        - containerPort: 8706
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: project3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:6.0.20
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "example"
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: project3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:8.0-M03-alpine3.21
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: REDIS_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: project3
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: project3
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8706
    targetPort: 8706
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: project3
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: project3
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379